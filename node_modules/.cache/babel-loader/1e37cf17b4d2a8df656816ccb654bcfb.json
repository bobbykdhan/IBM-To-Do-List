{"ast":null,"code":"var _jsxFileName = \"/Users/bobby/Desktop/to_do_list_week6-bobbykdhan-main/src/pages/Home.js\";\nimport React, { Component } from \"react\";\nimport Todos from \"../component/todos\";\nimport AddTodo from \"../component/AddTodo\";\nimport \"../pages/Home.css\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  // Create a default state of this component with an empty list of todos.\n  constructor() {\n    super();\n\n    this.deleteTodo = id => {\n      // Within this function, the item's id is being utilized in order to filter it out from the todo list\n      // and then updates the state with a new list\n      const todos = this.state.todos.filter(todo => {\n        return todo.id !== id;\n      });\n      this.setState({\n        todos: todos\n      });\n    };\n\n    this.addTodo = todo => {\n      const exists = this.state.todos.find(t => t.content === todo.content);\n\n      if (exists || todo.duedate == null || todo.duedate === \"Invalid Date\") {\n        return;\n      } // In React, keys or ids in a list help identify which items have changed, been added or removed. Keys\n      // should not share duplicate values.\n      // To avoid having dup values, we use the Math.random() function to generate a random value for a todo id.\n      // This solution works for a small application but a more complex hashing function should be used when\n      // dealing with a larger data sensitive project.\n\n\n      todo.id = Math.random(); // Send Task Item to database as a json object upon submission\n\n      const jsonObject = {\n        id: todo.id,\n        task: todo.content,\n        currentDate: todo.date,\n        dueDate: todo.duedate\n      };\n      Axios({\n        method: \"POST\",\n        url: \"http://localhost:8080/add/item\",\n        data: {\n          jsonObject\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(res.data.message);\n      }); // Create a array that contains the current array and the new todo item\n\n      let new_list = [...this.state.todos, todo]; // Update the local state with the new array.\n\n      this.setState({\n        todos: new_list\n      });\n    };\n\n    this.state = {\n      todos: []\n    };\n  } // the deleteTodo function simply creates a new array that removes the todo item selected from the user from the list\n  // and then updates the state with the new list.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo's \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n        addTodo: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Todos, {\n        todos: this.state.todos,\n        deleteTodo: this.deleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"names":["React","Component","Todos","AddTodo","Axios","Home","constructor","deleteTodo","id","todos","state","filter","todo","setState","addTodo","exists","find","t","content","duedate","Math","random","jsonObject","task","currentDate","date","dueDate","method","url","data","headers","then","res","console","log","message","new_list","render"],"sources":["/Users/bobby/Desktop/to_do_list_week6-bobbykdhan-main/src/pages/Home.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Todos from \"../component/todos\";\nimport AddTodo from \"../component/AddTodo\";\nimport \"../pages/Home.css\";\nimport Axios from \"axios\";\n\nclass Home extends Component {\n  // Create a default state of this component with an empty list of todos.\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n    };\n  }\n\n  // the deleteTodo function simply creates a new array that removes the todo item selected from the user from the list\n  // and then updates the state with the new list.\n  deleteTodo = (id) => {\n    // Within this function, the item's id is being utilized in order to filter it out from the todo list\n    // and then updates the state with a new list\n    const todos = this.state.todos.filter((todo) => {\n      return todo.id !== id;\n    });\n    this.setState({\n      todos: todos,\n    });\n  };\n\n  // the addTodo function simply creates a new array that includes the user submitted todo item and then\n  // updates the state with the new list.\n  addTodo = (todo) => {\n    const exists = this.state.todos.find(t => t.content === todo.content);\n    if (exists || todo.duedate == null || todo.duedate === \"Invalid Date\"){ return }\n    // In React, keys or ids in a list help identify which items have changed, been added or removed. Keys\n    // should not share duplicate values.\n    // To avoid having dup values, we use the Math.random() function to generate a random value for a todo id.\n    // This solution works for a small application but a more complex hashing function should be used when\n    // dealing with a larger data sensitive project.\n    todo.id = Math.random();\n\n     // Send Task Item to database as a json object upon submission\n     const jsonObject = {\n      id: todo.id,\n      task: todo.content,\n      currentDate: todo.date,\n      dueDate: todo.duedate\n    };\n\n    Axios({\n      method: \"POST\",\n      url: \"http://localhost:8080/add/item\",\n      data: {jsonObject},\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n        console.log(res.data.message);\n    });\n\n    // Create a array that contains the current array and the new todo item\n    let new_list = [...this.state.todos, todo];\n    // Update the local state with the new array.\n    this.setState({\n      todos: new_list,\n    });\n  };\n  render() {\n    return (\n      <div className=\"Home\">\n        <h1>Todo's </h1>\n        {/* When passing the AddTodo component, addTodo is a prop that is used in the \n        AddTodo.js file when handling the submit */}\n        <AddTodo addTodo={this.addTodo} />\n        {/* When returning the Todos component, todos is a prop passed to the todos.js file\n         to format and render the current todo list state */}\n        <Todos todos={this.state.todos} deleteTodo={this.deleteTodo} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;EAC3B;EACAK,WAAW,GAAG;IACZ;;IADY,KASdC,UATc,GASAC,EAAD,IAAQ;MACnB;MACA;MACA,MAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,MAAjB,CAAyBC,IAAD,IAAU;QAC9C,OAAOA,IAAI,CAACJ,EAAL,KAAYA,EAAnB;MACD,CAFa,CAAd;MAGA,KAAKK,QAAL,CAAc;QACZJ,KAAK,EAAEA;MADK,CAAd;IAGD,CAlBa;;IAAA,KAsBdK,OAtBc,GAsBHF,IAAD,IAAU;MAClB,MAAMG,MAAM,GAAG,KAAKL,KAAL,CAAWD,KAAX,CAAiBO,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcN,IAAI,CAACM,OAA9C,CAAf;;MACA,IAAIH,MAAM,IAAIH,IAAI,CAACO,OAAL,IAAgB,IAA1B,IAAkCP,IAAI,CAACO,OAAL,KAAiB,cAAvD,EAAsE;QAAE;MAAQ,CAF9D,CAGlB;MACA;MACA;MACA;MACA;;;MACAP,IAAI,CAACJ,EAAL,GAAUY,IAAI,CAACC,MAAL,EAAV,CARkB,CAUjB;;MACA,MAAMC,UAAU,GAAG;QAClBd,EAAE,EAAEI,IAAI,CAACJ,EADS;QAElBe,IAAI,EAAEX,IAAI,CAACM,OAFO;QAGlBM,WAAW,EAAEZ,IAAI,CAACa,IAHA;QAIlBC,OAAO,EAAEd,IAAI,CAACO;MAJI,CAAnB;MAODf,KAAK,CAAC;QACJuB,MAAM,EAAE,MADJ;QAEJC,GAAG,EAAE,gCAFD;QAGJC,IAAI,EAAE;UAACP;QAAD,CAHF;QAIJQ,OAAO,EAAE;UACP,gBAAgB;QADT;MAJL,CAAD,CAAL,CAOGC,IAPH,CAOQC,GAAG,IAAI;QACXC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACH,IAAJ,CAASM,OAArB;MACH,CATD,EAlBkB,CA6BlB;;MACA,IAAIC,QAAQ,GAAG,CAAC,GAAG,KAAK1B,KAAL,CAAWD,KAAf,EAAsBG,IAAtB,CAAf,CA9BkB,CA+BlB;;MACA,KAAKC,QAAL,CAAc;QACZJ,KAAK,EAAE2B;MADK,CAAd;IAGD,CAzDa;;IAEZ,KAAK1B,KAAL,GAAa;MACXD,KAAK,EAAE;IADI,CAAb;EAGD,CAP0B,CAS3B;EACA;;;EAkDA4B,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,OAAD;QAAS,OAAO,EAAE,KAAKvB;MAAvB;QAAA;QAAA;QAAA;MAAA,QAJF,eAOE,QAAC,KAAD;QAAO,KAAK,EAAE,KAAKJ,KAAL,CAAWD,KAAzB;QAAgC,UAAU,EAAE,KAAKF;MAAjD;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAWD;;AAxE0B;;AA2E7B,eAAeF,IAAf"},"metadata":{},"sourceType":"module"}